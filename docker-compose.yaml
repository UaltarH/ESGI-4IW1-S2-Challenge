version: '3'

services:
  mongo:
    container_name: ${MONGO_CONTAINER_NAME:-app_mongo}
    image: mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - default_network

  node:
    container_name: ${NODE_CONTAINER_NAME:-app_node}
    image: node:22.3-alpine3.20
    environment:
      PORT: 3000
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/app?authSource=admin
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      USER_MAIL: ${USER_MAIL}
      USER_MAIL_PASSWORD: ${USER_MAIL_PASSWORD}
      DOMAIN_FRONT: ${DOMAIN_FRONT}
      TEST_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_test:5432/test_${POSTGRES_DB}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    ports:
      - 8000:3000
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app
    entrypoint: sh -c
    command: '"npm install && npm run dev"'
    # command: '"npm install && npm run start"'
    networks:
      - default_network
    depends_on:
      - postgres
      - postgres_test
      - mongo
  
  vuejs:
   container_name: ${VUEJS_CONTAINER_NAME:-app_vuejs}
   image: node:20.0.0-alpine
   working_dir: /home/node/app   
   command: '"npm install && npm run dev"'
  #  command: '"npm install && npm run build"'
   ports:
     - 5173:5173
   volumes:
      - ./frontend:/home/node/app
   entrypoint: sh -c
   networks:
      - default_network

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME:-app_postgres}
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - default_network

  postgres_test:
    container_name: ${POSTGRES_CONTAINER_NAME:-test_postgres}
    image: postgres
    volumes:
      - postgres-data-test:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: test_${POSTGRES_DB}
    networks:
      - default_network
    
  adminer:
    container_name: ${ADMINER_CONTAINER_NAME:-app_adminer}
    image: adminer
    ports:
      - 8080:8080
    networks:
      - default_network
    depends_on:
      - postgres

  laposteapi:
    container_name: ${LAPOSTEAPI_CONTAINER_NAME:-app_laposteapi}
    image: node:22.3-alpine3.20
    environment:
      PORT: 7001
    ports:
      - 7001:7001
    volumes:
      - ./laposteapi:/home/node/app
    working_dir: /home/node/app
    entrypoint: sh -c
    command: '"npm install && npm run dev"'
    networks:
      - default_network
    depends_on:
      - postgres
      - mongo

  nginx:
    container_name: nginx
    image: nginx:1-alpine
    ports:
      - 8078:80
      - 44378:443
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/cert:/etc/ssl
    networks:
      - default_network
    depends_on:
      - vuejs
      - node
      - adminer

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - default_network
    depends_on:
      - node

volumes:
  mongo-data: {}
  postgres-data: {}
  postgres-data-test: {}
networks:
  default_network: {}
