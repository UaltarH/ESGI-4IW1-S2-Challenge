version: '3'

services:
  mongo:
    container_name: ${MONGO_CONTAINER_NAME:-app_mongo}
    image: mongo
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - mongo-data:/data/db
      - ./SampleCollections:/SampleCollections
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    working_dir: /SampleCollections

  node:
    container_name: ${NODE_CONTAINER_NAME:-app_node}
    image: node:22.3-alpine3.20
    environment:
      PORT: 3000
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/app?authSource=admin
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
    ports:
      - 8000:3000
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app
    entrypoint: sh -c
    command: '"npm install && npm run dev"'
    depends_on:
      - postgres
      - mongo
  
  vuejs:
   container_name: ${VUEJS_CONTAINER_NAME:-app_vuejs}
   image: node:20.0.0-alpine
   working_dir: /home/node/app
   # le --port 5174 --host est pour que le serveur soit accessible depuis l'extérieur et ce sont des paramètres passés à vite parce que npm run dev exécute vite
   command: '"cd frontend && npm install && npm run dev"'
   ports:
     - 5173:5173
   volumes:
      - .:/home/node/app
   entrypoint: sh -c

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME:-app_postgres}
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    
  adminer:
    container_name: ${ADMINER_CONTAINER_NAME:-app_adminer}
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - postgres

volumes:
  mongo-data: {}
  postgres-data: {}
